package com.yfkj.orchardhd.mvp.ui.activity;

import android.Manifest;
import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import com.azhon.appupdate.config.UpdateConfiguration;
import com.azhon.appupdate.manager.DownloadManager;
import com.blankj.utilcode.util.BarUtils;
import com.jess.arms.base.BaseActivity;
import com.jess.arms.di.component.AppComponent;
import com.jess.arms.utils.ArmsUtils;
import com.mingle.widget.LoadingView;
import com.tbruyelle.rxpermissions2.RxPermissions;
import com.tencent.smtt.sdk.WebView;
import com.tencent.smtt.sdk.WebViewClient;
import com.yfkj.orchardhd.BuildConfig;
import com.yfkj.orchardhd.Listener.ScreenListener;
import com.yfkj.orchardhd.bean.VersionAppBean;
import com.yfkj.orchardhd.di.component.DaggerMainComponent;
import com.yfkj.orchardhd.mvp.contract.MainContract;
import com.yfkj.orchardhd.mvp.presenter.MainPresenter;
import com.yfkj.orchardhd.R;
import com.yfkj.orchardhd.util.SPUtils;
import com.yfkj.orchardhd.view.dialog.PhotoDialog;
import com.yfkj.orchardhd.view.dialog.VideoPlayDialog;
import java.util.Objects;
import butterknife.BindView;
import static com.jess.arms.utils.Preconditions.checkNotNull;

/**
 * ================================================
 * Description:
 * <p>
 * Created by MVPArmsTemplate on 07/20/2019 11:47
 * <a href="mailto:jess.yan.effort@gmail.com">Contact me</a>
 * <a href="https://github.com/JessYanCoding">Follow me</a>
 * <a href="https://github.com/JessYanCoding/MVPArms">Star me</a>
 * <a href="https://github.com/JessYanCoding/MVPArms/wiki">See me</a>
 * <a href="https://github.com/JessYanCoding/MVPArmsTemplate">模版请保持更新</a>
 * ================================================
 */
public class MainActivity extends BaseActivity<MainPresenter> implements MainContract.View {

    @BindView(R.id.webview)
    WebView mWebView;

    @BindView(R.id.loadView)
    LoadingView loadingView;

    PhotoDialog photoDialog;
    VideoPlayDialog videoPlayDialog;
    ScreenListener screenListener;

    @Override
    public void setupActivityComponent(@NonNull AppComponent appComponent) {
        DaggerMainComponent //如找不到该类,请编译一下项目
                .builder()
                .appComponent(appComponent)
                .view(this)
                .build()
                .inject(this);
    }

    @Override
    public int initView(@Nullable Bundle savedInstanceState) {
        BarUtils.setStatusBarColor(this, Color.parseColor("#00000000"));
        BarUtils.setStatusBarVisibility(this,false);
        BarUtils.setStatusBarLightMode(this, true);
        return R.layout.activity_main; //如果你不需要框架帮你设置 setContentView(id) 需要自行设置,请返回 0
    }

    @SuppressLint("CheckResult")
    @Override
    public void initData(@Nullable Bundle savedInstanceState) {

        //获取基本的读写权限和定位权限
        RxPermissions rxPermissions=new RxPermissions(this);
        rxPermissions.request(Manifest.permission.READ_EXTERNAL_STORAGE,Manifest.permission.WRITE_EXTERNAL_STORAGE,
                 Manifest.permission.READ_PHONE_STATE)
                .subscribe(aBoolean -> {
                    if (!aBoolean){
                        //只要有一个权限被拒绝，就会执行
                        ArmsUtils.snackbarText("未授予权限，部分功能不能使用，请在应用管理重新打开");
                    }
                });


        Window _window;
        _window = getWindow();
        WindowManager.LayoutParams params = _window.getAttributes();
        params.systemUiVisibility = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
        _window.setAttributes(params);

        if(mPresenter!=null) {
            mPresenter.hideBottomUIMenu(this);
            mPresenter.setSettings(mWebView, this);
            mPresenter.getVersion(this);
        }

        screenListener = new ScreenListener( MainActivity.this ) ;

        mWebView.loadUrl(BuildConfig.BASE_URL+"/#/home");
        mWebView.addJavascriptInterface(this, "android");

        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                if (url.contains("openAppVideo")&&mPresenter!=null) {
                    String type = mPresenter.getValueByName(url,"type");
                    String videoUrl = mPresenter.getValueByName(url,"videoUrl");
                    String name = mPresenter.getValueByName(url,"name");
                    String token = mPresenter.getValueByName(url,"token");
                    String key = mPresenter.getValueByName(url,"key");
                    String sno = mPresenter.getValueByName(url,"sno");
                    String userToken = mPresenter.getValueByName(url,"userToken");

                    SPUtils.putValue(MainActivity.this, "token", Uri.decode(userToken)+"");
                    videoPlayDialog = new VideoPlayDialog(MainActivity.this);
                    Objects.requireNonNull(videoPlayDialog.getWindow()).getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);
                    videoPlayDialog.getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(visibility -> {
                        int uiOptions = View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
                                //布局位于状态栏下方
                                View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |
                                //全屏
                                View.SYSTEM_UI_FLAG_FULLSCREEN |
                                //隐藏导航栏
                                View.SYSTEM_UI_FLAG_HIDE_NAVIGATION |
                                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN;
                        uiOptions |= 0x00001000;
                        videoPlayDialog.getWindow().getDecorView().setSystemUiVisibility(uiOptions);
                    });

                    videoPlayDialog.setType(type);
                    videoPlayDialog.setAppkey(Uri.decode(key));
                    videoPlayDialog.setToken(Uri.decode(token));
                    videoPlayDialog.setPath(Uri.decode(videoUrl));
                    videoPlayDialog.setTitle(Uri.decode(name));
                    videoPlayDialog.setSno(Uri.decode(sno));
                    videoPlayDialog.show();
                }

                if(url.contains("openAppPhotoViewer")&&mPresenter!=null){
                    String title = mPresenter.getValueByName(url,"title");
                    String urls = mPresenter.getValueByName(url,"url");
                    String time = mPresenter.getValueByName(url,"time");

                    photoDialog = new PhotoDialog(MainActivity.this);
                    Objects.requireNonNull(photoDialog.getWindow()).getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);
                    photoDialog.getWindow().getDecorView().setOnSystemUiVisibilityChangeListener(visibility -> {
                        int uiOptions = View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
                                //布局位于状态栏下方
                                View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |
                                //全屏
                                View.SYSTEM_UI_FLAG_FULLSCREEN |
                                //隐藏导航栏
                                View.SYSTEM_UI_FLAG_HIDE_NAVIGATION |
                                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN;
                        uiOptions |= 0x00001000;
                        photoDialog.getWindow().getDecorView().setSystemUiVisibility(uiOptions);
                    });

                    photoDialog.setPath(Uri.decode(urls));
                    photoDialog.setTitle(Uri.decode(title));
                    photoDialog.setTime(Uri.decode(time));
                    photoDialog.show();
                }
                /*if(url.contains("loginInputOnfocus")&&mPresenter!=null){
                    Toast.makeText(MainActivity.this,"弹",Toast.LENGTH_SHORT).show();
                    mPresenter.hideBottomUIMenu(MainActivity.this);
                    KeyboardUtils.hideSoftInput(MainActivity.this);
                }*/
                if (url.contains("exitApp")) {
                    MainActivity.this.finish();
                }
                return true;
            }
            @Override
            public void onPageStarted(WebView view, String url, Bitmap favicon) {
                super.onPageStarted(view, url, favicon);

            }

            @Override
            public void onPageFinished(WebView view, String url) {
                loadingView.setVisibility(View.GONE);
            }
        });

        screenListener.begin(new ScreenListener.ScreenStateListener() {
            @Override
            public void onScreenOn() {
                //屏幕打开了
            }
            @Override
            public void onScreenOff() {
                //屏幕关闭了
                videoPlayDialog.dismiss();
            }
            @Override
            public void onUserPresent() {
                //解锁了
            }
        });
    }

    @SuppressLint("SetJavaScriptEnabled")
    @Override
    public void onResume() {
        super.onResume();
        mWebView.onResume();
    }

    @Override
    public void showMessage(@NonNull String message) {
        checkNotNull(message);
        ArmsUtils.snackbarText(message);
    }

    @Override
    public void launchActivity(@NonNull Intent intent) {
        checkNotNull(intent);
        ArmsUtils.startActivity(intent);
    }

    @Override
    public void killMyself() {
        finish();
    }


    @Override
    protected void onDestroy() {
        super.onDestroy();
        screenListener.unregisterListener();
    }

    @Override
    public void getVersionDate(VersionAppBean versionAppBean) {
        if(versionAppBean!=null) {
            if (!BuildConfig.VERSION_NAME.equals(versionAppBean.getData().getAppVersionVo().getAppv_num())) {
                AlertDialog.Builder updateDialog = new AlertDialog.Builder(this);
                updateDialog.setTitle("发现新版本")
                        .setMessage(versionAppBean.getData().getAppVersionVo().getAppv_describe())
                        .setPositiveButton("立即更新" + versionAppBean.getData().getAppVersionVo().getAppv_size() + "M", (dialog, which) -> {
                            UpdateConfiguration configuration = new UpdateConfiguration();
                            configuration
                                    //下载完自动跳转安装
                                    .setJumpInstallPage(true)
                                    //显示通知栏进度
                                    .setShowNotification(true)
                                    //提示正在后台下载
                                    .setShowBgdToast(true);

                            DownloadManager manager = DownloadManager.getInstance(MainActivity.this);
                            manager.setApkName(getString(R.string.app_name) + ".apk")
                                    .setApkUrl(versionAppBean.getData().getAppVersionVo().getAppv_url())
                                    .setSmallIcon(R.mipmap.ic_launcher)
                                    .setConfiguration(configuration)
                                    .setAuthorities(getPackageName())
                                    .download();
                        }).create().show();
            }
        }
    }

}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        